       <Box key={book.book_id || index}>

                        <BookCard book={book} openModal={() => openModal(book)} />
                        {book.Tags.map((tag: any) => {
                            return tag.title
                        })}


                    </Box>
                

/*    console.log(tags) */

    /*   const cleanTags = tags.filter((x: any) => x !== undefined);
     
      const fantasy = cleanTags.filter((cleanTags: string) => cleanTags == "Fantasy");
     
      console.log("filter");
      console.log(cleanTags);
      console.log("filter"); */

  const tags = data && data.map((book: any) => {
        return Object.values(book.Tags.map((tag: any) => {
            /*   return tag.map((val: [any]) => { return val }) */

            return tag.title


            /* tag.title.filter((tag.title) => tag.title.length > 6) */

        }))[0]
    });   

      /*  const [filterTerm, setFilterTerm] = useState([]);
     const addFilterTerm = (prop: any) => {
         setFilterTerm(oldArray => [...oldArray, `${oldArray.length}${prop}`]);
 
     }
     console.log(filterTerm) */


    /*    const [filtered, setFiltered] = useState("All"); */
    /*   const [nonFiction, setNonFiction] = useState(false); */

    /* console.log(Array.isArray(data)); */  

    /*const [themeList, setThemeList] = useState([]);



       const addTheme = (e: any) => {
          if (themeList.includes(e) === true) {
              themeList.map((theme: any) => {
                    console.log(theme)
                  for (let key in themeList) {
                      if (themeList[key] === e) {
                          const newArr = [...themeList]
  
                          for (let key in themeList) {
                              if (newArr[key] === undefined) {
                                  delete newArr[key]
                              }
                          }
  
                          delete themeList[key]
                          setThemeList(newArr)
                          console.log(e)
                          console.log(newArr)
                      }
  
                  }
  
  
              })
          } else if (themeList.includes(e) === false) {
              const newArr = [...themeList]
              console.log(e)
              newArr.push(e)
              setThemeList(newArr)
              console.log(newArr + "l√•")
          }
  
      }; */                